name: publish-ubi8

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '16 1 * * *'
  push:
    #branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: code-server
  IMAGE_VERSION: 4.0.2
  GHCR_REGISTRY: ghcr.io
  GHCR_USER: ${{ github.repository_owner }}
  GHCR_IMAGE: ${GHCR_REGISTRY}/${GHCR_USER}/${IMAGE_NAME}
  #QUAY_REGISTRY=quay.io
  #QUAY_USER: ${{ github.repository_owner }}


jobs:
  publish:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          #VERSION=${GITHUB_REF#refs/tags/v}
          VERSION=${{ env.IMAGE_VERSION }}
          MINOR=${VERSION%.*}
          MAJOR=${VERSION%%.*}
          GHCR_IMAGE=${{ env.GHCR_IMAGE }}
          #TAGS="${DOCKERHUB_IMAGE}:${MAJOR},${DOCKERHUB_IMAGE}:${MINOR}"
          #TAGS="${TAGS},${DOCKERHUB_IMAGE}:${VERSION},${DOCKERHUB_IMAGE}:latest"
          TAGS="${TAGS},${GHCR_IMAGE}:${MAJOR},${GHCR_IMAGE}:${MINOR}"
          TAGS="${TAGS},${GHCR_IMAGE}:${VERSION},${GHCR_IMAGE}:latest"
          LATEST="${GHCR_IMAGE}:latest"
          echo ::set-output name=name::${{ env.IMAGE_NAME }}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=image::${GHCR_IMAGE}
          echo ::set-output name=version::${VERSION}
          #echo ::set-output name=dockerhub_image::${DOCKERHUB_IMAGE}
          echo ::set-output name=ghcr_image::${GHCR_IMAGE}

      # https://github.com/docker/login-action
      - name: Log into GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # https://github.com/docker/setup-buildx-action#customizing
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker # defaults to "docker-containerized"

      # https://github.com/docker/build-push-action
      - name: Build and push - ubi8 base
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        with:
          context: container/base
          file: container/base/Dockerfile.ubi8
          push: ${{ github.event_name != 'pull_request' }}
          tags: custom-code-server:ubi-base,${{ steps.prep.outputs.image }}:ubi-base
          labels: org.opencontainers.image.version=${{ steps.prep.outputs.version }}

      # https://github.com/docker/build-push-action
      - name: Build and push - ubi8 patch
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        with:
          context: container/base
          file: container/patch/Dockerfile.ubi8
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }},${{ steps.prep.outputs.image }}:ubi
          labels: org.opencontainers.image.version=${{ steps.prep.outputs.version }} 
